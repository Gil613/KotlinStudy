1. 함수
    - 공장
    - 재료를 넣어주면 완제품이 나온다
    - 어떤 재료를 넣어줘야 하나?

 - 기본형
  fun 함수명(변수명:타입, 변수명:타입, ..): 반환형{
    함수 내용
    .
    .
    .
    .
    return 반환값
  }


 - 기본값이 있는 함수
 fun 함수명(변수명:타입 = 기본값, 변수명: 타입, ...): 반환형{
    함수 내용
     .
     .
     .
     .
     return 반환값
 }
 - 반환값이 없는 함수
 fun 함수명(변수명:타입,...):Unit{
    함수내용
    .
    .
    .

 }
 fun 함수명(변수명:타입,...){
    함수내용
    .
    .
    .

 }
 - 약식으로 선언
 fun 함수명(변수명:타입,...) = 함수내용
    -> 함수 내용이 간단한 경우에 활용

 - 가변 인자를 갖는 함수(variable argument)
 fun 함수명(vararg 변수명:타입):반환형{
    함수내용
    .
    .
    return 반환값
 }


 코틀린에 존재하는 특이한 자료형/키워드
 1. Unit
 - 자바 -> void
 2. Any/Any?
 - non-null 타입의 조상      (Int, Long, ....)
 - Any? nullable 타입의 조상 (Int?, Long?, ...)
 3. Nothing
 fun 함수명(변수명:타입, ...): Nothing {
 //이 함수를 호출하면 무언가 잘못되었다.
 }

https://readystory.tistory.com/143

 => Unit은 java의 void와 뜻이 같다
 Nothing은 리턴이라는 행위자체를 하지 않는다.
 코틀린 컴파일러는 똑똑해서 함수에 결함이 있다면 그 결함을 확인하고 유추를 해낸다.
 그렇기 때문에 만약 리턴 가능한 함수에서 리턴 타입을 Nothing으로 정의할 경우 컴파일러가
 컴파일 에러를 발생시켜준다.